-- This file was generated by VoltDB version 9.2.1 on: 2024-08-14 20:25:40 GMT+00:00.
-- This file represents the current database schema.
-- Use this file as input to reproduce the current database structure in another database instance.
--
-- This file uses the --inlinebatch feature. Batching processes all of the DDL in a single step
-- dramatically reducing the time required to apply the schema compared to processing each
-- command separately.
--
-- If the schema declares Java stored procedures, be sure to load the .jar file
-- with the classes before loading the schema. For example:
--
-- LOAD CLASSES voltdb-procs.jar;
-- FILE ddl.sql;

file -inlinebatch END_OF_BATCH
CREATE TABLE BALANCE (
   BALANCE_ID integer NOT NULL,
   PACKAGE_ID integer,
   CUST_ID integer,
   BAL_LVL_MINUTES integer NOT NULL,
   BAL_LVL_SMS integer NOT NULL,
   BAL_LVL_DATA integer NOT NULL,
   SDATE timestamp DEFAULT CURRENT_TIMESTAMP,
   EDATE timestamp DEFAULT CURRENT_TIMESTAMP,
   PRICE integer NOT NULL,
   BAL_LVL_MONEY integer NOT NULL,
   PRIMARY KEY (BALANCE_ID)
);
CREATE INDEX SYS_IDX_10025 ON BALANCE (PACKAGE_ID);
CREATE INDEX SYS_IDX_10027 ON BALANCE (CUST_ID);

CREATE TABLE CUSTOMER (
   CUST_ID integer NOT NULL,
   MSISDN bigint NOT NULL,
   NAME varchar(30) NOT NULL,
   SURNAME varchar(30) NOT NULL,
   EMAIL varchar(50) NOT NULL,
   PASSWORD varchar(20) NOT NULL,
   STR_DATE timestamp DEFAULT CURRENT_TIMESTAMP,
   STATUS varchar(20) DEFAULT 'A' NOT NULL,
   SECURITY_KEY varchar(50) NOT NULL,
   UNIQUE (MSISDN),
   PRIMARY KEY (CUST_ID)
);

CREATE TABLE PACKAGE (
   PACKAGE_ID integer,
   PACKAGE_NAME varchar(200),
   PRICE integer,
   AMOUNT_MINUTES integer,
   AMOUNT_DATA integer,
   AMOUNT_SMS integer,
   PERIOD integer,
   PRIMARY KEY (PACKAGE_ID)
);

CREATE PROCEDURE AllPackages
   AS
BEGIN
   select * from package p where p.package_id != -1;
END;

CREATE PROCEDURE GetAmountData
   AS
BEGIN
   select AMOUNT_DATA from package p where p.package_id = ?;
END;

CREATE PROCEDURE GetAmountMinutes
   AS
BEGIN
   select AMOUNT_MINUTES from package p where p.package_id = ?;
END;

CREATE PROCEDURE GetAmountSMS
   AS
BEGIN
   select AMOUNT_SMS from package p where p.package_id = ?;
END;

CREATE PROCEDURE 
   FROM CLASS GetCustomerIdByMSISDN;

CREATE PROCEDURE 
   FROM CLASS GetCustomerInfo;

CREATE PROCEDURE 
   FROM CLASS GetDataDataForCustomer;

CREATE PROCEDURE 
   FROM CLASS GetMinutesDataForCustomer;

CREATE PROCEDURE 
   FROM CLASS GetMoneyDataForCustomer;

CREATE PROCEDURE GetPackageIds
   AS
BEGIN
   select package_id from package p where p.package_id != -1;
END;

CREATE PROCEDURE 
   FROM CLASS GetPackageInfo;

CREATE PROCEDURE GetPackageName
   AS
BEGIN
   select PACKAGE_NAME from package p where p.package_id = ?;
END;

CREATE PROCEDURE GetPackagePeriod
   AS
BEGIN
   select PERIOD from package p where p.package_id = ?;
END;

CREATE PROCEDURE GetPackagePrice
   AS
BEGIN
   select PRICE from package p where p.package_id = ?;
END;

CREATE PROCEDURE 
   FROM CLASS GetSmsDataForCustomer;

CREATE PROCEDURE 
   FROM CLASS InitBalance;

CREATE PROCEDURE 
   FROM CLASS InsertCustomer;

CREATE PROCEDURE SetBalanceByPackageId
   AS
BEGIN
   UPDATE balance SET package_id = ?, bal_lvl_minutes = ?, bal_lvl_sms = ?, bal_lvl_data = ?, price = ? WHERE cust_id = ?;
END;

CREATE PROCEDURE 
   FROM CLASS UpdateCustomerData;

CREATE PROCEDURE 
   FROM CLASS UpdateCustomerMinutes;

CREATE PROCEDURE 
   FROM CLASS UpdateCustomerMoney;

CREATE PROCEDURE 
   FROM CLASS UpdateCustomerSms;

END_OF_BATCH
